{
    "sourceFile": "parrot-aml/src/App.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 23,
            "patches": [
                {
                    "date": 1735329591986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1735329601520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,23 +3,21 @@\n import LeftBar from './Component/LeftBar'; // Ensure correct import path\n import MainInterface from './Component/MainInterface'; // Import MainInterface\n \n const App = () => {\n-  const initialSearchParams = {\n+  const [searchParams, setSearchParams] = useState({\n     name: '',\n     age: '',\n     occupation: ''\n-  };\n+  });\n \n-  const [searchParams, setSearchParams] = useState(initialSearchParams);\n   const [savedItems, setSavedItems] = useState([]);\n   const [submitted, setSubmitted] = useState(false);\n \n   const saveData = () => {\n     if (searchParams.name.trim()) {\n       setSavedItems((prevItems) => [...prevItems, searchParams]);\n       setSubmitted(true);\n-      setSearchParams(initialSearchParams); // Reset the form inputs\n     }\n   };\n \n   const handleInputChange = (e) => {\n@@ -29,15 +27,13 @@\n       [name]: value\n     }));\n   };\n \n-  const toggleState = () => {\n-    setSubmitted(!submitted);\n-  };\n-\n   return (\n     <div className=\"main-parent\">\n-      <LeftBar savedItems={savedItems} toggleState={toggleState} />\n+      <div className=\"left-bar\">\n+        <LeftBar savedItems={savedItems} />\n+      </div>\n       <MainInterface\n         submitted={submitted}\n         searchParams={searchParams}\n         handleInputChange={handleInputChange}\n"
                },
                {
                    "date": 1735333157790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,5 +42,5 @@\n     </div>\n   );\n };\n \n-export default App;\n+export default App;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736963810932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,11 @@\n-import React, { useState } from 'react';\n+import React, { useState, useEffect } from 'react';\n import './App.css'; // Import global styles\n import LeftBar from './Component/LeftBar'; // Ensure correct import path\n import MainInterface from './Component/MainInterface'; // Import MainInterface\n+import { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom'; // For routing\n+import LoginPage from './login system/LoginPage'; // Login page component\n+import { getAuth, onAuthStateChanged } from 'firebase/auth'; // Firebase Auth\n \n const App = () => {\n   const [searchParams, setSearchParams] = useState({\n     name: '',\n@@ -11,8 +14,10 @@\n   });\n \n   const [savedItems, setSavedItems] = useState([]);\n   const [submitted, setSubmitted] = useState(false);\n+  const [isAuthenticated, setIsAuthenticated] = useState(false); // Track login status\n+  const navigate = useNavigate(); // Navigate for redirecting\n \n   const saveData = () => {\n     if (searchParams.name.trim()) {\n       setSavedItems((prevItems) => [...prevItems, searchParams]);\n@@ -27,20 +32,53 @@\n       [name]: value\n     }));\n   };\n \n+  // Check for authentication status\n+  useEffect(() => {\n+    const auth = getAuth();\n+    const unsubscribe = onAuthStateChanged(auth, (user) => {\n+      if (user) {\n+        setIsAuthenticated(true); // User is authenticated\n+        navigate('/main'); // Redirect to the main layout if authenticated\n+      } else {\n+        setIsAuthenticated(false); // User is not authenticated\n+        navigate('/login'); // Redirect to the login page if not authenticated\n+      }\n+    });\n+\n+    return () => unsubscribe();\n+  }, [navigate]);\n+\n\\ No newline at end of file\n   return (\n-    <div className=\"main-parent\">\n-      <div className=\"left-bar\">\n-        <LeftBar savedItems={savedItems} />\n-      </div>\n-      <MainInterface\n-        submitted={submitted}\n-        searchParams={searchParams}\n-        handleInputChange={handleInputChange}\n-        saveData={saveData}\n-      />\n-    </div>\n+    <Router>\n+      <Routes>\n+        {/* Login route */}\n+        <Route path=\"/login\" element={<LoginPage />} />\n+\n+        {/* Main layout route (protected route) */}\n+        <Route\n+          path=\"/main\"\n+          element={\n+            isAuthenticated ? (\n+              <div className=\"main-parent\">\n+                <div className=\"left-bar\">\n+                  <LeftBar savedItems={savedItems} />\n+                </div>\n+                <MainInterface\n+                  submitted={submitted}\n+                  searchParams={searchParams}\n+                  handleInputChange={handleInputChange}\n+                  saveData={saveData}\n+                />\n+              </div>\n+            ) : (\n+              <p>You must log in to access the main layout.</p>\n+            )\n+          }\n+        />\n+      </Routes>\n+    </Router>\n   );\n };\n \n-export default App;\n+export default App;\n"
                },
                {
                    "date": 1736964260913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,24 +17,26 @@\n   const [submitted, setSubmitted] = useState(false);\n   const [isAuthenticated, setIsAuthenticated] = useState(false); // Track login status\n   const navigate = useNavigate(); // Navigate for redirecting\n \n+  // Save data to savedItems if the name field is not empty\n   const saveData = () => {\n     if (searchParams.name.trim()) {\n       setSavedItems((prevItems) => [...prevItems, searchParams]);\n       setSubmitted(true);\n     }\n   };\n \n+  // Handle input changes and update the searchParams state\n   const handleInputChange = (e) => {\n     const { name, value } = e.target;\n-    setSearchParams(prev => ({\n+    setSearchParams((prev) => ({\n       ...prev,\n       [name]: value\n     }));\n   };\n \n-  // Check for authentication status\n+  // Check authentication status and redirect accordingly\n   useEffect(() => {\n     const auth = getAuth();\n     const unsubscribe = onAuthStateChanged(auth, (user) => {\n       if (user) {\n@@ -80,5 +82,5 @@\n     </Router>\n   );\n };\n \n-export default App;\n\\ No newline at end of file\n+export default App;\n"
                },
                {
                    "date": 1736964390509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState, useEffect } from 'react';\n import './App.css'; // Import global styles\n import LeftBar from './Component/LeftBar'; // Ensure correct import path\n import MainInterface from './Component/MainInterface'; // Import MainInterface\n-import { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom'; // For routing\n+import { Route, Routes, useNavigate } from 'react-router-dom'; // For routing\n import LoginPage from './login system/LoginPage'; // Login page component\n import { getAuth, onAuthStateChanged } from 'firebase/auth'; // Firebase Auth\n \n const App = () => {\n@@ -17,26 +17,24 @@\n   const [submitted, setSubmitted] = useState(false);\n   const [isAuthenticated, setIsAuthenticated] = useState(false); // Track login status\n   const navigate = useNavigate(); // Navigate for redirecting\n \n-  // Save data to savedItems if the name field is not empty\n   const saveData = () => {\n     if (searchParams.name.trim()) {\n       setSavedItems((prevItems) => [...prevItems, searchParams]);\n       setSubmitted(true);\n     }\n   };\n \n-  // Handle input changes and update the searchParams state\n   const handleInputChange = (e) => {\n     const { name, value } = e.target;\n     setSearchParams((prev) => ({\n       ...prev,\n       [name]: value\n     }));\n   };\n \n-  // Check authentication status and redirect accordingly\n+  // Check authentication status\n   useEffect(() => {\n     const auth = getAuth();\n     const unsubscribe = onAuthStateChanged(auth, (user) => {\n       if (user) {\n@@ -51,36 +49,34 @@\n     return () => unsubscribe();\n   }, [navigate]);\n \n   return (\n-    <Router>\n-      <Routes>\n-        {/* Login route */}\n-        <Route path=\"/login\" element={<LoginPage />} />\n+    <Routes>\n+      {/* Login route */}\n+      <Route path=\"/login\" element={<LoginPage />} />\n \n-        {/* Main layout route (protected route) */}\n-        <Route\n-          path=\"/main\"\n-          element={\n-            isAuthenticated ? (\n-              <div className=\"main-parent\">\n-                <div className=\"left-bar\">\n-                  <LeftBar savedItems={savedItems} />\n-                </div>\n-                <MainInterface\n-                  submitted={submitted}\n-                  searchParams={searchParams}\n-                  handleInputChange={handleInputChange}\n-                  saveData={saveData}\n-                />\n+      {/* Main layout route (protected route) */}\n+      <Route\n+        path=\"/main\"\n+        element={\n+          isAuthenticated ? (\n+            <div className=\"main-parent\">\n+              <div className=\"left-bar\">\n+                <LeftBar savedItems={savedItems} />\n               </div>\n-            ) : (\n-              <p>You must log in to access the main layout.</p>\n-            )\n-          }\n-        />\n-      </Routes>\n-    </Router>\n+              <MainInterface\n+                submitted={submitted}\n+                searchParams={searchParams}\n+                handleInputChange={handleInputChange}\n+                saveData={saveData}\n+              />\n+            </div>\n+          ) : (\n+            <p>You must log in to access the main layout.</p>\n+          )\n+        }\n+      />\n+    </Routes>\n   );\n };\n \n export default App;\n"
                },
                {
                    "date": 1736965291379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,15 @@\n import React, { useState, useEffect } from 'react';\n-import './App.css'; // Import global styles\n-import LeftBar from './Component/LeftBar'; // Ensure correct import path\n-import MainInterface from './Component/MainInterface'; // Import MainInterface\n-import { Route, Routes, useNavigate } from 'react-router-dom'; // For routing\n-import LoginPage from './login system/LoginPage'; // Login page component\n-import { getAuth, onAuthStateChanged } from 'firebase/auth'; // Firebase Auth\n+import './App.css'; \n+import LeftBar from './Component/LeftBar'; \n+import MainInterface from './Component/MainInterface'; \n+import { Route, Routes, useNavigate } from 'react-router-dom'; \n+import LoginPage from './login system/LoginPage'; \n+import { getAuth, onAuthStateChanged, signInWithEmailAndPassword, signOut } from 'firebase/auth'; // Firebase Auth\n+import { firebaseApp } from './firebase'; // Import firebase initialization\n \n+const auth = getAuth(firebaseApp);\n+\n const App = () => {\n   const [searchParams, setSearchParams] = useState({\n     name: '',\n     age: '',\n@@ -14,10 +17,12 @@\n   });\n \n   const [savedItems, setSavedItems] = useState([]);\n   const [submitted, setSubmitted] = useState(false);\n-  const [isAuthenticated, setIsAuthenticated] = useState(false); // Track login status\n-  const navigate = useNavigate(); // Navigate for redirecting\n+  const [isAuthenticated, setIsAuthenticated] = useState(false); \n+  const [email, setEmail] = useState('');\n+  const [password, setPassword] = useState('');\n+  const navigate = useNavigate(); \n \n   const saveData = () => {\n     if (searchParams.name.trim()) {\n       setSavedItems((prevItems) => [...prevItems, searchParams]);\n@@ -34,26 +39,52 @@\n   };\n \n   // Check authentication status\n   useEffect(() => {\n-    const auth = getAuth();\n     const unsubscribe = onAuthStateChanged(auth, (user) => {\n       if (user) {\n-        setIsAuthenticated(true); // User is authenticated\n-        navigate('/main'); // Redirect to the main layout if authenticated\n+        setIsAuthenticated(true); \n+        navigate('/main'); \n       } else {\n-        setIsAuthenticated(false); // User is not authenticated\n-        navigate('/login'); // Redirect to the login page if not authenticated\n+        setIsAuthenticated(false); \n+        navigate('/login'); \n       }\n     });\n \n     return () => unsubscribe();\n   }, [navigate]);\n \n+  // Sign in function\n+  const signIn = () => {\n+    signInWithEmailAndPassword(auth, email, password)\n+      .then((userCredential) => {\n+        // Signed in \n+        const user = userCredential.user;\n+        console.log(user);\n+      })\n+      .catch((error) => {\n+        const errorCode = error.code;\n+        const errorMessage = error.message;\n+        console.log(errorCode, errorMessage);\n+      });\n+  };\n+\n+  // Sign out function\n+  const handleSignOut = () => {\n+    signOut(auth)\n+      .then(() => {\n+        setIsAuthenticated(false);\n+        navigate('/login'); \n+      })\n+      .catch((error) => {\n+        console.error(\"Sign out error:\", error.message);\n+      });\n+  };\n+\n   return (\n     <Routes>\n       {/* Login route */}\n-      <Route path=\"/login\" element={<LoginPage />} />\n+      <Route path=\"/login\" element={<LoginPage signIn={signIn} email={email} setEmail={setEmail} password={password} setPassword={setPassword} />} />\n \n       {/* Main layout route (protected route) */}\n       <Route\n         path=\"/main\"\n@@ -68,8 +99,9 @@\n                 searchParams={searchParams}\n                 handleInputChange={handleInputChange}\n                 saveData={saveData}\n               />\n+              <button onClick={handleSignOut}>Sign Out</button>\n             </div>\n           ) : (\n             <p>You must log in to access the main layout.</p>\n           )\n@@ -79,4 +111,5 @@\n   );\n };\n \n export default App;\n+vvvvvvvv\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736965807245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,13 @@\n import React, { useState, useEffect } from 'react';\n import './App.css'; \n-import LeftBar from './Component/LeftBar'; \n-import MainInterface from './Component/MainInterface'; \n-import { Route, Routes, useNavigate } from 'react-router-dom'; \n-import LoginPage from './login system/LoginPage'; \n-import { getAuth, onAuthStateChanged, signInWithEmailAndPassword, signOut } from 'firebase/auth'; // Firebase Auth\n-import { firebaseApp } from './firebase'; // Import firebase initialization\n+import { Route, Routes, useNavigate } from 'react-router-dom';\n+import { app, firestore } from './firebase'; // Import 'app' and 'firestore' correctly\n+import LeftBar from './Component/LeftBar';\n+import MainInterface from './Component/MainInterface';\n+import LoginPage from './login system/LoginPage';\n+import { getAuth, onAuthStateChanged } from 'firebase/auth';\n \n-const auth = getAuth(firebaseApp);\n-\n const App = () => {\n   const [searchParams, setSearchParams] = useState({\n     name: '',\n     age: '',\n@@ -17,12 +15,10 @@\n   });\n \n   const [savedItems, setSavedItems] = useState([]);\n   const [submitted, setSubmitted] = useState(false);\n-  const [isAuthenticated, setIsAuthenticated] = useState(false); \n-  const [email, setEmail] = useState('');\n-  const [password, setPassword] = useState('');\n-  const navigate = useNavigate(); \n+  const [isAuthenticated, setIsAuthenticated] = useState(false);\n+  const navigate = useNavigate();\n \n   const saveData = () => {\n     if (searchParams.name.trim()) {\n       setSavedItems((prevItems) => [...prevItems, searchParams]);\n@@ -39,54 +35,25 @@\n   };\n \n   // Check authentication status\n   useEffect(() => {\n+    const auth = getAuth(app); // Make sure to pass the 'app' object here\n     const unsubscribe = onAuthStateChanged(auth, (user) => {\n       if (user) {\n         setIsAuthenticated(true); \n-        navigate('/main'); \n+        navigate('/main');\n       } else {\n         setIsAuthenticated(false); \n-        navigate('/login'); \n+        navigate('/login');\n       }\n     });\n \n     return () => unsubscribe();\n   }, [navigate]);\n \n-  // Sign in function\n-  const signIn = () => {\n-    signInWithEmailAndPassword(auth, email, password)\n-      .then((userCredential) => {\n-        // Signed in \n-        const user = userCredential.user;\n-        console.log(user);\n-      })\n-      .catch((error) => {\n-        const errorCode = error.code;\n-        const errorMessage = error.message;\n-        console.log(errorCode, errorMessage);\n-      });\n-  };\n-\n-  // Sign out function\n-  const handleSignOut = () => {\n-    signOut(auth)\n-      .then(() => {\n-        setIsAuthenticated(false);\n-        navigate('/login'); \n-      })\n-      .catch((error) => {\n-        console.error(\"Sign out error:\", error.message);\n-      });\n-  };\n-\n   return (\n     <Routes>\n-      {/* Login route */}\n-      <Route path=\"/login\" element={<LoginPage signIn={signIn} email={email} setEmail={setEmail} password={password} setPassword={setPassword} />} />\n-\n-      {/* Main layout route (protected route) */}\n+      <Route path=\"/login\" element={<LoginPage />} />\n       <Route\n         path=\"/main\"\n         element={\n           isAuthenticated ? (\n@@ -99,9 +66,8 @@\n                 searchParams={searchParams}\n                 handleInputChange={handleInputChange}\n                 saveData={saveData}\n               />\n-              <button onClick={handleSignOut}>Sign Out</button>\n             </div>\n           ) : (\n             <p>You must log in to access the main layout.</p>\n           )\n@@ -111,5 +77,5 @@\n   );\n };\n \n export default App;\n-vvvvvvvv\n\\ No newline at end of file\n+vvvv\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736966936774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState, useEffect } from 'react';\n-import './App.css'; \n+import './App.css';\n import { Route, Routes, useNavigate } from 'react-router-dom';\n-import { app, firestore } from './firebase'; // Import 'app' and 'firestore' correctly\n+import { app, firestore } from './firebase'; // Correct import for app and firestore\n import LeftBar from './Component/LeftBar';\n import MainInterface from './Component/MainInterface';\n import LoginPage from './login system/LoginPage';\n import { getAuth, onAuthStateChanged } from 'firebase/auth';\n@@ -35,25 +35,28 @@\n   };\n \n   // Check authentication status\n   useEffect(() => {\n-    const auth = getAuth(app); // Make sure to pass the 'app' object here\n+    const auth = getAuth(app); // Ensure to use 'app' here for correct Firebase instance\n     const unsubscribe = onAuthStateChanged(auth, (user) => {\n       if (user) {\n-        setIsAuthenticated(true); \n-        navigate('/main');\n+        setIsAuthenticated(true); // User is authenticated\n+        navigate('/main'); // Redirect to the main layout\n       } else {\n-        setIsAuthenticated(false); \n-        navigate('/login');\n+        setIsAuthenticated(false); // User is not authenticated\n+        navigate('/login'); // Redirect to the login page\n       }\n     });\n \n     return () => unsubscribe();\n   }, [navigate]);\n \n   return (\n     <Routes>\n+      {/* Login route */}\n       <Route path=\"/login\" element={<LoginPage />} />\n+\n+      {/* Main layout route (protected route) */}\n       <Route\n         path=\"/main\"\n         element={\n           isAuthenticated ? (\n"
                },
                {
                    "date": 1736966954731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,5 +80,4 @@\n   );\n };\n \n export default App;\n-vvvv\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736971310381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import LeftBar from './Component/LeftBar';\n import MainInterface from './Component/MainInterface';\n import LoginPage from './login system/LoginPage';\n import { getAuth, onAuthStateChanged } from 'firebase/auth';\n+import { loginUser } from './auth'; // Import the loginUser function\n \n const App = () => {\n   const [searchParams, setSearchParams] = useState({\n     name: '',\n@@ -16,8 +17,9 @@\n \n   const [savedItems, setSavedItems] = useState([]);\n   const [submitted, setSubmitted] = useState(false);\n   const [isAuthenticated, setIsAuthenticated] = useState(false);\n+  const [clientId, setClientId] = useState(null); // State to hold the client_id\n   const navigate = useNavigate();\n \n   const saveData = () => {\n     if (searchParams.name.trim()) {\n@@ -49,35 +51,53 @@\n \n     return () => unsubscribe();\n   }, [navigate]);\n \n+  // Function to get the client_id based on the domain\n+  const handleLogin = async (email, password) => {\n+    try {\n+      const user = await loginUser(email, password);\n+      const client_id = localStorage.getItem('client_id'); // Get client_id from localStorage\n+      setClientId(client_id); // Set client_id state\n+      console.log('Logged in user:', user);\n+    } catch (error) {\n+      console.error('Login error:', error.message);\n+    }\n+  };\n+\n   return (\n-    <Routes>\n-      {/* Login route */}\n-      <Route path=\"/login\" element={<LoginPage />} />\n+    <div>\n+      <Routes>\n+        {/* Login route */}\n+        <Route path=\"/login\" element={<LoginPage />} />\n \n-      {/* Main layout route (protected route) */}\n-      <Route\n-        path=\"/main\"\n-        element={\n-          isAuthenticated ? (\n-            <div className=\"main-parent\">\n-              <div className=\"left-bar\">\n-                <LeftBar savedItems={savedItems} />\n+        {/* Main layout route (protected route) */}\n+        <Route\n+          path=\"/main\"\n+          element={\n+            isAuthenticated ? (\n+              <div className=\"main-parent\">\n+                <div className=\"left-bar\">\n+                  <LeftBar savedItems={savedItems} />\n+                </div>\n+                <MainInterface\n+                  submitted={submitted}\n+                  searchParams={searchParams}\n+                  handleInputChange={handleInputChange}\n+                  saveData={saveData}\n+                />\n+                {/* Display the client_id here */}\n+                <div>\n+                  {clientId && <p>Client ID: {clientId}</p>}\n+                </div>\n               </div>\n-              <MainInterface\n-                submitted={submitted}\n-                searchParams={searchParams}\n-                handleInputChange={handleInputChange}\n-                saveData={saveData}\n-              />\n-            </div>\n-          ) : (\n-            <p>You must log in to access the main layout.</p>\n-          )\n-        }\n-      />\n-    </Routes>\n+            ) : (\n+              <p>You must log in to access the main layout.</p>\n+            )\n+          }\n+        />\n+      </Routes>\n+    </div>\n   );\n };\n \n export default App;\n"
                },
                {
                    "date": 1736971327401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import LeftBar from './Component/LeftBar';\n import MainInterface from './Component/MainInterface';\n import LoginPage from './login system/LoginPage';\n import { getAuth, onAuthStateChanged } from 'firebase/auth';\n-import { loginUser } from './auth'; // Import the loginUser function\n+import { loginUser } from '../auth/auth.jsx'; // Import the loginUser function\n \n const App = () => {\n   const [searchParams, setSearchParams] = useState({\n     name: '',\n"
                },
                {
                    "date": 1736971344864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import LeftBar from './Component/LeftBar';\n import MainInterface from './Component/MainInterface';\n import LoginPage from './login system/LoginPage';\n import { getAuth, onAuthStateChanged } from 'firebase/auth';\n-import { loginUser } from '../auth/auth.jsx'; // Import the loginUser function\n+import { loginUser } from './auth/auth.jsx'; // Import the loginUser function\n \n const App = () => {\n   const [searchParams, setSearchParams] = useState({\n     name: '',\n"
                },
                {
                    "date": 1736971408049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import LeftBar from './Component/LeftBar';\n import MainInterface from './Component/MainInterface';\n import LoginPage from './login system/LoginPage';\n import { getAuth, onAuthStateChanged } from 'firebase/auth';\n-import { loginUser } from './auth/auth.jsx'; // Import the loginUser function\n+import { loginUser } from './auth'; // Import the loginUser function\n \n const App = () => {\n   const [searchParams, setSearchParams] = useState({\n     name: '',\n@@ -51,19 +51,15 @@\n \n     return () => unsubscribe();\n   }, [navigate]);\n \n-  // Function to get the client_id based on the domain\n-  const handleLogin = async (email, password) => {\n-    try {\n-      const user = await loginUser(email, password);\n-      const client_id = localStorage.getItem('client_id'); // Get client_id from localStorage\n-      setClientId(client_id); // Set client_id state\n-      console.log('Logged in user:', user);\n-    } catch (error) {\n-      console.error('Login error:', error.message);\n+  // Fetch client_id from localStorage after successful login\n+  useEffect(() => {\n+    const storedClientId = localStorage.getItem('client_id');\n+    if (storedClientId) {\n+      setClientId(storedClientId); // Set client_id to state\n     }\n-  };\n+  }, [isAuthenticated]);\n \n   return (\n     <div>\n       <Routes>\n@@ -100,4 +96,5 @@\n   );\n };\n \n export default App;\n+v\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736971422232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import LeftBar from './Component/LeftBar';\n import MainInterface from './Component/MainInterface';\n import LoginPage from './login system/LoginPage';\n import { getAuth, onAuthStateChanged } from 'firebase/auth';\n-import { loginUser } from './auth'; // Import the loginUser function\n+import { loginUser } from './auth/auth.jsx'; // Import the loginUser function\n \n const App = () => {\n   const [searchParams, setSearchParams] = useState({\n     name: '',\n@@ -96,5 +96,4 @@\n   );\n };\n \n export default App;\n-v\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736971553529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,12 @@\n import React, { useState, useEffect } from 'react';\n import './App.css';\n import { Route, Routes, useNavigate } from 'react-router-dom';\n-import { app, firestore } from './firebase'; // Correct import for app and firestore\n+import { app } from './firebase'; // Correct import for app\n import LeftBar from './Component/LeftBar';\n import MainInterface from './Component/MainInterface';\n import LoginPage from './login system/LoginPage';\n-import { getAuth, onAuthStateChanged } from 'firebase/auth';\n-import { loginUser } from './auth/auth.jsx'; // Import the loginUser function\n+import { getAuth, onAuthStateChanged, signOut } from 'firebase/auth';\n \n const App = () => {\n   const [searchParams, setSearchParams] = useState({\n     name: '',\n@@ -17,9 +16,8 @@\n \n   const [savedItems, setSavedItems] = useState([]);\n   const [submitted, setSubmitted] = useState(false);\n   const [isAuthenticated, setIsAuthenticated] = useState(false);\n-  const [clientId, setClientId] = useState(null); // State to hold the client_id\n   const navigate = useNavigate();\n \n   const saveData = () => {\n     if (searchParams.name.trim()) {\n@@ -35,8 +33,30 @@\n       [name]: value\n     }));\n   };\n \n+  // Clear localStorage, sessionStorage, and cookies\n+  const clearLocalStorage = () => {\n+    localStorage.clear();\n+    sessionStorage.clear();\n+    console.log(\"LocalStorage and SessionStorage cleared.\");\n+  };\n+\n+  const clearCookies = () => {\n+    document.cookie = \"yourCookieName=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n+    console.log(\"Cookies cleared.\");\n+  };\n+\n+  const resetApp = () => {\n+    clearLocalStorage();\n+    clearCookies();\n+    const auth = getAuth(app);\n+    signOut(auth); // Sign out Firebase user\n+    setIsAuthenticated(false); // Update authentication state\n+    navigate('/login'); // Redirect to login page\n+    console.log(\"App reset, user logged out.\");\n+  };\n+\n   // Check authentication status\n   useEffect(() => {\n     const auth = getAuth(app); // Ensure to use 'app' here for correct Firebase instance\n     const unsubscribe = onAuthStateChanged(auth, (user) => {\n@@ -51,18 +71,11 @@\n \n     return () => unsubscribe();\n   }, [navigate]);\n \n-  // Fetch client_id from localStorage after successful login\n-  useEffect(() => {\n-    const storedClientId = localStorage.getItem('client_id');\n-    if (storedClientId) {\n-      setClientId(storedClientId); // Set client_id to state\n-    }\n-  }, [isAuthenticated]);\n-\n   return (\n     <div>\n+      <button onClick={resetApp}>Reset App (Logout and Clear Data)</button>\n       <Routes>\n         {/* Login route */}\n         <Route path=\"/login\" element={<LoginPage />} />\n \n@@ -80,12 +93,8 @@\n                   searchParams={searchParams}\n                   handleInputChange={handleInputChange}\n                   saveData={saveData}\n                 />\n-                {/* Display the client_id here */}\n-                <div>\n-                  {clientId && <p>Client ID: {clientId}</p>}\n-                </div>\n               </div>\n             ) : (\n               <p>You must log in to access the main layout.</p>\n             )\n"
                },
                {
                    "date": 1736971651526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import React, { useState, useEffect } from 'react';\n import './App.css';\n import { Route, Routes, useNavigate } from 'react-router-dom';\n-import { app } from './firebase'; // Correct import for app\n+import { app, firestore } from './firebase'; // Correct import for app and firestore\n import LeftBar from './Component/LeftBar';\n import MainInterface from './Component/MainInterface';\n import LoginPage from './login system/LoginPage';\n-import { getAuth, onAuthStateChanged, signOut } from 'firebase/auth';\n+import { getAuth, onAuthStateChanged } from 'firebase/auth';\n \n const App = () => {\n   const [searchParams, setSearchParams] = useState({\n     name: '',\n@@ -33,34 +33,13 @@\n       [name]: value\n     }));\n   };\n \n-  // Clear localStorage, sessionStorage, and cookies\n-  const clearLocalStorage = () => {\n-    localStorage.clear();\n-    sessionStorage.clear();\n-    console.log(\"LocalStorage and SessionStorage cleared.\");\n-  };\n-\n-  const clearCookies = () => {\n-    document.cookie = \"yourCookieName=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n-    console.log(\"Cookies cleared.\");\n-  };\n-\n-  const resetApp = () => {\n-    clearLocalStorage();\n-    clearCookies();\n-    const auth = getAuth(app);\n-    signOut(auth); // Sign out Firebase user\n-    setIsAuthenticated(false); // Update authentication state\n-    navigate('/login'); // Redirect to login page\n-    console.log(\"App reset, user logged out.\");\n-  };\n-\n   // Check authentication status\n   useEffect(() => {\n     const auth = getAuth(app); // Ensure to use 'app' here for correct Firebase instance\n     const unsubscribe = onAuthStateChanged(auth, (user) => {\n+      console.log('Auth state changed', user);\n       if (user) {\n         setIsAuthenticated(true); // User is authenticated\n         navigate('/main'); // Redirect to the main layout\n       } else {\n@@ -71,11 +50,23 @@\n \n     return () => unsubscribe();\n   }, [navigate]);\n \n+  const resetApp = () => {\n+    console.log('Resetting app...');\n+    // Reset Firebase Auth state and remove client_id from localStorage\n+    const auth = getAuth(app);\n+    auth.signOut(); // Log out the user\n+    localStorage.removeItem('client_id'); // Remove stored client_id\n+    setIsAuthenticated(false); // Update the authentication state\n+    navigate('/login'); // Redirect to login page\n+  };\n+\n   return (\n     <div>\n-      <button onClick={resetApp}>Reset App (Logout and Clear Data)</button>\n+      <h1>App is running successfully!</h1> {/* Check if this is displayed */}\n+      <button onClick={resetApp}>Reset App (Logout and Clear Data)</button> {/* Reset button */}\n+\n       <Routes>\n         {/* Login route */}\n         <Route path=\"/login\" element={<LoginPage />} />\n \n@@ -105,4 +96,5 @@\n   );\n };\n \n export default App;\n+vvvv\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736971665302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,6 +95,5 @@\n     </div>\n   );\n };\n \n-export default App;\n-vvvv\n\\ No newline at end of file\n+export default App;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736971732138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,11 +61,11 @@\n     navigate('/login'); // Redirect to login page\n   };\n \n   return (\n-    <div>\n-      <h1>App is running successfully!</h1> {/* Check if this is displayed */}\n-      <button onClick={resetApp}>Reset App (Logout and Clear Data)</button> {/* Reset button */}\n+    <div className=\"app-container\">\n+      <h1>App is running successfully!</h1>\n+      <button onClick={resetApp} className=\"reset-button\">Reset App (Logout and Clear Data)</button> {/* Reset button */}\n \n       <Routes>\n         {/* Login route */}\n         <Route path=\"/login\" element={<LoginPage />} />\n@@ -95,5 +95,5 @@\n     </div>\n   );\n };\n \n-export default App;\n\\ No newline at end of file\n+export default App;\n"
                },
                {
                    "date": 1736971808417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,10 +62,10 @@\n   };\n \n   return (\n     <div className=\"app-container\">\n-      <h1>App is running successfully!</h1>\n-      <button onClick={resetApp} className=\"reset-button\">Reset App (Logout and Clear Data)</button> {/* Reset button */}\n+      {/* Reset button placed outside the main layout */}\n+      <button onClick={resetApp} className=\"reset-button\">Reset App (Logout and Clear Data)</button>\n \n       <Routes>\n         {/* Login route */}\n         <Route path=\"/login\" element={<LoginPage />} />\n@@ -78,14 +78,16 @@\n               <div className=\"main-parent\">\n                 <div className=\"left-bar\">\n                   <LeftBar savedItems={savedItems} />\n                 </div>\n-                <MainInterface\n-                  submitted={submitted}\n-                  searchParams={searchParams}\n-                  handleInputChange={handleInputChange}\n-                  saveData={saveData}\n-                />\n+                <div className=\"main-interface\">\n+                  <MainInterface\n+                    submitted={submitted}\n+                    searchParams={searchParams}\n+                    handleInputChange={handleInputChange}\n+                    saveData={saveData}\n+                  />\n+                </div>\n               </div>\n             ) : (\n               <p>You must log in to access the main layout.</p>\n             )\n@@ -96,4 +98,5 @@\n   );\n };\n \n export default App;\n+vvv\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736971825833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,5 +98,4 @@\n   );\n };\n \n export default App;\n-vvv\n\\ No newline at end of file\n"
                },
                {
                    "date": 1737025851079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,25 +1,34 @@\n import React, { useState, useEffect } from 'react';\n import './App.css';\n import { Route, Routes, useNavigate } from 'react-router-dom';\n-import { app, firestore } from './firebase'; // Correct import for app and firestore\n+import { app, firestore } from './firebase';\n import LeftBar from './Component/LeftBar';\n import MainInterface from './Component/MainInterface';\n import LoginPage from './login system/LoginPage';\n import { getAuth, onAuthStateChanged } from 'firebase/auth';\n \n+// Add domain to company name mapping\n+const domainClientMapping = {\n+  'transinergi.com': { 'client-id': 'client-id-transinergi', 'company-name': 'Trans Sinergi' },\n+  'datum.com': { 'client-id': 'client-id-datum', 'company-name': 'DatumCorp' },\n+};\n+\n const App = () => {\n   const [searchParams, setSearchParams] = useState({\n     name: '',\n     age: '',\n     occupation: ''\n   });\n-\n   const [savedItems, setSavedItems] = useState([]);\n   const [submitted, setSubmitted] = useState(false);\n   const [isAuthenticated, setIsAuthenticated] = useState(false);\n   const navigate = useNavigate();\n \n+  // Get the domain and map it to a company name\n+  const domain = window.location.hostname;  // Get the current domain\n+  const companyName = domainClientMapping[domain]?.['company-name'] || 'Unknown Company';  // Default to 'Unknown Company' if no match\n+\n   const saveData = () => {\n     if (searchParams.name.trim()) {\n       setSavedItems((prevItems) => [...prevItems, searchParams]);\n       setSubmitted(true);\n@@ -35,43 +44,41 @@\n   };\n \n   // Check authentication status\n   useEffect(() => {\n-    const auth = getAuth(app); // Ensure to use 'app' here for correct Firebase instance\n+    const auth = getAuth(app);\n     const unsubscribe = onAuthStateChanged(auth, (user) => {\n       console.log('Auth state changed', user);\n       if (user) {\n-        setIsAuthenticated(true); // User is authenticated\n-        navigate('/main'); // Redirect to the main layout\n+        setIsAuthenticated(true);\n+        navigate('/main');\n       } else {\n-        setIsAuthenticated(false); // User is not authenticated\n-        navigate('/login'); // Redirect to the login page\n+        setIsAuthenticated(false);\n+        navigate('/login');\n       }\n     });\n \n     return () => unsubscribe();\n   }, [navigate]);\n \n   const resetApp = () => {\n     console.log('Resetting app...');\n-    // Reset Firebase Auth state and remove client_id from localStorage\n     const auth = getAuth(app);\n-    auth.signOut(); // Log out the user\n-    localStorage.removeItem('client_id'); // Remove stored client_id\n-    setIsAuthenticated(false); // Update the authentication state\n-    navigate('/login'); // Redirect to login page\n+    auth.signOut(); \n+    localStorage.removeItem('client_id'); \n+    setIsAuthenticated(false);\n+    navigate('/login');\n   };\n \n   return (\n     <div className=\"app-container\">\n-      {/* Reset button placed outside the main layout */}\n       <button onClick={resetApp} className=\"reset-button\">Reset App (Logout and Clear Data)</button>\n \n       <Routes>\n-        {/* Login route */}\n-        <Route path=\"/login\" element={<LoginPage />} />\n-\n-        {/* Main layout route (protected route) */}\n+        <Route \n+          path=\"/login\" \n+          element={<LoginPage companyName={companyName} />}  // Pass company name here\n+        />\n         <Route\n           path=\"/main\"\n           element={\n             isAuthenticated ? (\n"
                },
                {
                    "date": 1737026435173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,33 +1,34 @@\n import React, { useState, useEffect } from 'react';\n import './App.css';\n import { Route, Routes, useNavigate } from 'react-router-dom';\n-import { app, firestore } from './firebase';\n+import { app, firestore } from './firebase'; // Correct import for app and firestore\n import LeftBar from './Component/LeftBar';\n import MainInterface from './Component/MainInterface';\n import LoginPage from './login system/LoginPage';\n import { getAuth, onAuthStateChanged } from 'firebase/auth';\n \n-// Add domain to company name mapping\n+// Domain-to-client_id mapping\n const domainClientMapping = {\n-  'transinergi.com': { 'client-id': 'client-id-transinergi', 'company-name': 'Trans Sinergi' },\n-  'datum.com': { 'client-id': 'client-id-datum', 'company-name': 'DatumCorp' },\n+  'transinergi.com': { client_id: 'client-id-transinergi', 'company-name': 'Trans Sinergi' },\n+  'datum.com': { client_id: 'client-id-datum', 'company-name': 'DatumCorp' }\n };\n \n const App = () => {\n   const [searchParams, setSearchParams] = useState({\n     name: '',\n     age: '',\n     occupation: ''\n   });\n+\n   const [savedItems, setSavedItems] = useState([]);\n   const [submitted, setSubmitted] = useState(false);\n   const [isAuthenticated, setIsAuthenticated] = useState(false);\n   const navigate = useNavigate();\n \n-  // Get the domain and map it to a company name\n-  const domain = window.location.hostname;  // Get the current domain\n-  const companyName = domainClientMapping[domain]?.['company-name'] || 'Unknown Company';  // Default to 'Unknown Company' if no match\n+  // Get company name based on the domain\n+  const domain = window.location.hostname;\n+  const companyName = domainClientMapping[domain]?.['company-name'] || 'Unknown Company';\n \n   const saveData = () => {\n     if (searchParams.name.trim()) {\n       setSavedItems((prevItems) => [...prevItems, searchParams]);\n@@ -44,41 +45,43 @@\n   };\n \n   // Check authentication status\n   useEffect(() => {\n-    const auth = getAuth(app);\n+    const auth = getAuth(app); // Ensure to use 'app' here for correct Firebase instance\n     const unsubscribe = onAuthStateChanged(auth, (user) => {\n       console.log('Auth state changed', user);\n       if (user) {\n-        setIsAuthenticated(true);\n-        navigate('/main');\n+        setIsAuthenticated(true); // User is authenticated\n+        navigate('/main'); // Redirect to the main layout\n       } else {\n-        setIsAuthenticated(false);\n-        navigate('/login');\n+        setIsAuthenticated(false); // User is not authenticated\n+        navigate('/login'); // Redirect to the login page\n       }\n     });\n \n     return () => unsubscribe();\n   }, [navigate]);\n \n   const resetApp = () => {\n     console.log('Resetting app...');\n+    // Reset Firebase Auth state and remove client_id from localStorage\n     const auth = getAuth(app);\n-    auth.signOut(); \n-    localStorage.removeItem('client_id'); \n-    setIsAuthenticated(false);\n-    navigate('/login');\n+    auth.signOut(); // Log out the user\n+    localStorage.removeItem('client_id'); // Remove stored client_id\n+    setIsAuthenticated(false); // Update the authentication state\n+    navigate('/login'); // Redirect to login page\n   };\n \n   return (\n     <div className=\"app-container\">\n+      {/* Reset button placed outside the main layout */}\n       <button onClick={resetApp} className=\"reset-button\">Reset App (Logout and Clear Data)</button>\n \n       <Routes>\n-        <Route \n-          path=\"/login\" \n-          element={<LoginPage companyName={companyName} />}  // Pass company name here\n-        />\n+        {/* Login route */}\n+        <Route path=\"/login\" element={<LoginPage companyName={companyName} />} />\n+\n+        {/* Main layout route (protected route) */}\n         <Route\n           path=\"/main\"\n           element={\n             isAuthenticated ? (\n"
                },
                {
                    "date": 1737041315348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState, useEffect } from 'react';\n import './App.css';\n import { Route, Routes, useNavigate } from 'react-router-dom';\n-import { app, firestore } from './firebase'; // Correct import for app and firestore\n+import { app, firestore } from './firebase/firebase'; // Correct import for app and firestore\n import LeftBar from './Component/LeftBar';\n import MainInterface from './Component/MainInterface';\n import LoginPage from './login system/LoginPage';\n import { getAuth, onAuthStateChanged } from 'firebase/auth';\n"
                }
            ],
            "date": 1735329591986,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\nimport './App.css'; // Import global styles\nimport LeftBar from './Component/LeftBar'; // Ensure correct import path\nimport MainInterface from './Component/MainInterface'; // Import MainInterface\n\nconst App = () => {\n  const initialSearchParams = {\n    name: '',\n    age: '',\n    occupation: ''\n  };\n\n  const [searchParams, setSearchParams] = useState(initialSearchParams);\n  const [savedItems, setSavedItems] = useState([]);\n  const [submitted, setSubmitted] = useState(false);\n\n  const saveData = () => {\n    if (searchParams.name.trim()) {\n      setSavedItems((prevItems) => [...prevItems, searchParams]);\n      setSubmitted(true);\n      setSearchParams(initialSearchParams); // Reset the form inputs\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setSearchParams(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const toggleState = () => {\n    setSubmitted(!submitted);\n  };\n\n  return (\n    <div className=\"main-parent\">\n      <LeftBar savedItems={savedItems} toggleState={toggleState} />\n      <MainInterface\n        submitted={submitted}\n        searchParams={searchParams}\n        handleInputChange={handleInputChange}\n        saveData={saveData}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"
        }
    ]
}