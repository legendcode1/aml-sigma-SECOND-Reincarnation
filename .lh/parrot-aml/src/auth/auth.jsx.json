{
    "sourceFile": "parrot-aml/src/auth/auth.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1736966845685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736967418645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,40 +1,49 @@\n-// auth.js\r\n-import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendEmailVerification } from \"firebase/auth\";\r\n+import { initializeApp } from \"firebase/app\";\r\n+import { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n \r\n-// Allowed email domains\r\n-const allowedDomains = ['sinergi.com', 'datum.com'];\r\n+// Firebase configuration\r\n+const firebaseConfig = {\r\n+  apiKey: \"AIzaSyBfku8hikwXrII_Uv2u0pL6-f0a0a0mKr8\",\r\n+  authDomain: \"datumcorp-aml.firebaseapp.com\",\r\n+  projectId: \"datumcorp-aml\",\r\n+  storageBucket: \"datumcorp-aml.firebasestorage.app\",\r\n+  messagingSenderId: \"710428028162\",\r\n+  appId: \"1:710428028162:web:486e3aad77de49d0d8261b\",\r\n+  measurementId: \"G-KSL9Y2V3HX\"\r\n+};\r\n \r\n-const isValidDomain = (email) => {\r\n-  const domain = email.split('@')[1];\r\n-  return allowedDomains.includes(domain);\r\n+// Initialize Firebase\r\n+const app = initializeApp(firebaseConfig);\r\n+const auth = getAuth(app);\r\n+\r\n+// Domain-to-client_id mapping\r\n+const domainClientMapping = {\r\n+  'sinergi.com': 'client-id-sinergi',\r\n+  'datum.com': 'client-id-datum'\r\n };\r\n \r\n-export const handleLogin = async (email, password) => {\r\n-  if (!isValidDomain(email)) {\r\n-    alert('This email domain is not allowed.');\r\n-    return;\r\n+// Function to handle login\r\n+export const loginUser = async (email, password) => {\r\n+  const domain = email.split('@')[1]; // Extract the domain part of the email\r\n+\r\n+  // Check if the domain is valid\r\n\\ No newline at end of file\n+  if (!domainClientMapping[domain]) {\r\n+    throw new Error('This email domain is not allowed.');\r\n   }\r\n \r\n-  const auth = getAuth();\r\n+  const client_id = domainClientMapping[domain]; // Get the client_id based on the domain\r\n+\r\n   try {\r\n-    await signInWithEmailAndPassword(auth, email, password);\r\n-  } catch (error) {\r\n-    console.error('Login Error:', error.message);\r\n-  }\r\n-};\r\n+    // Authenticate the user with Firebase\r\n+    const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n+    const user = userCredential.user;\r\n \r\n-export const handleSignUp = async (email, password) => {\r\n-  if (!isValidDomain(email)) {\r\n-    alert('This email domain is not allowed.');\r\n-    return;\r\n-  }\r\n+    // Store the client_id for the session (use localStorage, React context, etc.)\r\n+    localStorage.setItem('client_id', client_id);\r\n \r\n-  const auth = getAuth();\r\n-  try {\r\n-    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n-    await sendEmailVerification(userCredential.user);\r\n-    console.log('Verification email sent!');\r\n+    // Return user data (or redirect, or whatever you need)\r\n+    return user;\r\n   } catch (error) {\r\n-    console.error('Sign-Up Error:', error.message);\r\n+    throw new Error('Login failed: ' + error.message);\r\n   }\r\n-};\n+};\r\n"
                },
                {
                    "date": 1736968584434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,8 @@\n-import { initializeApp } from \"firebase/app\";\r\n-import { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n+// Import the already initialized Firebase app and authentication services\r\n+import { getAuth } from \"firebase/auth\";\r\n+import { app } from './firebase';  // Import the app from your firebase.js file\r\n \r\n-// Firebase configuration\r\n-const firebaseConfig = {\r\n-  apiKey: \"AIzaSyBfku8hikwXrII_Uv2u0pL6-f0a0a0mKr8\",\r\n-  authDomain: \"datumcorp-aml.firebaseapp.com\",\r\n-  projectId: \"datumcorp-aml\",\r\n-  storageBucket: \"datumcorp-aml.firebasestorage.app\",\r\n-  messagingSenderId: \"710428028162\",\r\n-  appId: \"1:710428028162:web:486e3aad77de49d0d8261b\",\r\n-  measurementId: \"G-KSL9Y2V3HX\"\r\n-};\r\n-\r\n-// Initialize Firebase\r\n-const app = initializeApp(firebaseConfig);\r\n-const auth = getAuth(app);\r\n-\r\n // Domain-to-client_id mapping\r\n const domainClientMapping = {\r\n   'sinergi.com': 'client-id-sinergi',\r\n   'datum.com': 'client-id-datum'\r\n@@ -31,8 +17,9 @@\n     throw new Error('This email domain is not allowed.');\r\n   }\r\n \r\n   const client_id = domainClientMapping[domain]; // Get the client_id based on the domain\r\n+  const auth = getAuth(app);  // Get the authentication service using the imported app\r\n \r\n   try {\r\n     // Authenticate the user with Firebase\r\n     const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n@@ -45,5 +32,6 @@\n     return user;\r\n   } catch (error) {\r\n     throw new Error('Login failed: ' + error.message);\r\n   }\r\n-};\n\\ No newline at end of file\n+};\r\n+vvvvvvvvvvv\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736969274515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // Import the already initialized Firebase app and authentication services\r\n import { getAuth } from \"firebase/auth\";\r\n-import { app } from './firebase';  // Import the app from your firebase.js file\r\n+import { app } from '../firebase.jsx';  // Import the app from your firebase.js file\r\n \r\n // Domain-to-client_id mapping\r\n const domainClientMapping = {\r\n   'sinergi.com': 'client-id-sinergi',\r\n"
                },
                {
                    "date": 1736970684757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,36 @@\n+// Import the already initialized Firebase app and authentication services\r\n+import { getAuth } from \"firebase/auth\";\r\n+import { app } from '../firebase.js';  // Import the app from your firebase.js file\r\n+\r\n+// Domain-to-client_id mapping\r\n+const domainClientMapping = {\r\n+  'sinergi.com': 'client-id-sinergi',\r\n+  'datum.com': 'client-id-datum'\r\n+};\r\n+\r\n+// Function to handle login\r\n+export const loginUser = async (email, password) => {\r\n+  const domain = email.split('@')[1]; // Extract the domain part of the email\r\n+\r\n+  // Check if the domain is valid\r\n+  if (!domainClientMapping[domain]) {\r\n+    throw new Error('This email domain is not allowed.');\r\n+  }\r\n+\r\n+  const client_id = domainClientMapping[domain]; // Get the client_id based on the domain\r\n+  const auth = getAuth(app);  // Get the authentication service using the imported app\r\n+\r\n+  try {\r\n+    // Authenticate the user with Firebase\r\n+    const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n+    const user = userCredential.user;\r\n+\r\n+    // Store the client_id for the session (use localStorage, React context, etc.)\r\n+    localStorage.setItem('client_id', client_id);\r\n+\r\n+    // Return user data (or redirect, or whatever you need)\r\n+    return user;\r\n+  } catch (error) {\r\n+    throw new Error('Login failed: ' + error.message);\r\n+  }\r\n+};\r\n"
                },
                {
                    "date": 1736970761302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { app } from '../firebase.js';  // Import the app from your firebase.js file\r\n \r\n // Domain-to-client_id mapping\r\n const domainClientMapping = {\r\n-  'sinergi.com': 'client-id-sinergi',\r\n+  'transinergi.com': 'client-id-transinergi',\r\n   'datum.com': 'client-id-datum'\r\n };\r\n \r\n // Function to handle login\r\n@@ -33,41 +33,4 @@\n   } catch (error) {\r\n     throw new Error('Login failed: ' + error.message);\r\n   }\r\n };\r\n-// Import the already initialized Firebase app and authentication services\r\n-import { getAuth } from \"firebase/auth\";\r\n-import { app } from '../firebase.jsx';  // Import the app from your firebase.js file\r\n-\r\n-// Domain-to-client_id mapping\r\n-const domainClientMapping = {\r\n-  'sinergi.com': 'client-id-sinergi',\r\n-  'datum.com': 'client-id-datum'\r\n-};\r\n-\r\n-// Function to handle login\r\n-export const loginUser = async (email, password) => {\r\n-  const domain = email.split('@')[1]; // Extract the domain part of the email\r\n-\r\n-  // Check if the domain is valid\r\n-  if (!domainClientMapping[domain]) {\r\n-    throw new Error('This email domain is not allowed.');\r\n-  }\r\n-\r\n-  const client_id = domainClientMapping[domain]; // Get the client_id based on the domain\r\n-  const auth = getAuth(app);  // Get the authentication service using the imported app\r\n-\r\n-  try {\r\n-    // Authenticate the user with Firebase\r\n-    const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n-    const user = userCredential.user;\r\n-\r\n-    // Store the client_id for the session (use localStorage, React context, etc.)\r\n-    localStorage.setItem('client_id', client_id);\r\n-\r\n-    // Return user data (or redirect, or whatever you need)\r\n-    return user;\r\n-  } catch (error) {\r\n-    throw new Error('Login failed: ' + error.message);\r\n-  }\r\n-};\r\n-vvvvvvvvvvv\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736970884322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,22 @@\n-// Import the already initialized Firebase app and authentication services\r\n-import { getAuth } from \"firebase/auth\";\r\n-import { app } from '../firebase.js';  // Import the app from your firebase.js file\r\n+import { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n+import { initializeApp } from \"firebase/app\";\r\n \r\n+// Firebase configuration\r\n+const firebaseConfig = {\r\n+  apiKey: \"AIzaSyBfku8hikwXrII_Uv2u0pL6-f0a0a0mKr8\",\r\n+  authDomain: \"datumcorp-aml.firebaseapp.com\",\r\n+  projectId: \"datumcorp-aml\",\r\n+  storageBucket: \"datumcorp-aml.appspot.com\",\r\n+  messagingSenderId: \"710428028162\",\r\n+  appId: \"1:710428028162:web:486e3aad77de49d0d8261b\",\r\n+  measurementId: \"G-KSL9Y2V3HX\"\r\n+};\r\n+\r\n+// Initialize Firebase\r\n+const app = initializeApp(firebaseConfig);\r\n+const auth = getAuth(app);\r\n+\r\n // Domain-to-client_id mapping\r\n const domainClientMapping = {\r\n   'transinergi.com': 'client-id-transinergi',\r\n   'datum.com': 'client-id-datum'\r\n@@ -17,9 +31,8 @@\n     throw new Error('This email domain is not allowed.');\r\n   }\r\n \r\n   const client_id = domainClientMapping[domain]; // Get the client_id based on the domain\r\n-  const auth = getAuth(app);  // Get the authentication service using the imported app\r\n \r\n   try {\r\n     // Authenticate the user with Firebase\r\n     const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n"
                },
                {
                    "date": 1736971020172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,11 @@\n   }\r\n \r\n   const client_id = domainClientMapping[domain]; // Get the client_id based on the domain\r\n \r\n+    // Output the client_id to the console\r\n+    console.log(\"Client ID: \", client_id);\r\n+\r\n   try {\r\n     // Authenticate the user with Firebase\r\n     const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n     const user = userCredential.user;\r\n"
                },
                {
                    "date": 1736971239944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,10 +32,10 @@\n   }\r\n \r\n   const client_id = domainClientMapping[domain]; // Get the client_id based on the domain\r\n \r\n-    // Output the client_id to the console\r\n-    console.log(\"Client ID: \", client_id);\r\n+  // Output the client_id to the console\r\n+  console.log(\"Client ID: \", client_id);\r\n \r\n   try {\r\n     // Authenticate the user with Firebase\r\n     const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n"
                },
                {
                    "date": 1737025501889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,12 +17,19 @@\n const auth = getAuth(app);\r\n \r\n // Domain-to-client_id mapping\r\n const domainClientMapping = {\r\n-  'transinergi.com': 'client-id-transinergi',\r\n-  'datum.com': 'client-id-datum'\r\n+  'transinergi.com': {\r\n+    clientId: 'client-id-transinergi',\r\n+    companyName: 'trans sinergi'\r\n+  },\r\n+  'datum.com': {\r\n+    clientId: 'client-id-datum',\r\n+    companyName: 'DatumCorp'\r\n+  }\r\n };\r\n \r\n+\r\n // Function to handle login\r\n export const loginUser = async (email, password) => {\r\n   const domain = email.split('@')[1]; // Extract the domain part of the email\r\n \r\n"
                },
                {
                    "date": 1737039478841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,17 +19,16 @@\n // Domain-to-client_id mapping\r\n const domainClientMapping = {\r\n   'transinergi.com': {\r\n     clientId: 'client-id-transinergi',\r\n-    companyName: 'trans sinergi'\r\n+    companyName: 'Trans Sinergi'\r\n   },\r\n   'datum.com': {\r\n     clientId: 'client-id-datum',\r\n     companyName: 'DatumCorp'\r\n   }\r\n };\r\n \r\n-\r\n // Function to handle login\r\n export const loginUser = async (email, password) => {\r\n   const domain = email.split('@')[1]; // Extract the domain part of the email\r\n \r\n@@ -37,20 +36,22 @@\n   if (!domainClientMapping[domain]) {\r\n     throw new Error('This email domain is not allowed.');\r\n   }\r\n \r\n-  const client_id = domainClientMapping[domain]; // Get the client_id based on the domain\r\n+  const { clientId, companyName } = domainClientMapping[domain]; // Get clientId and companyName based on the domain\r\n \r\n-  // Output the client_id to the console\r\n-  console.log(\"Client ID: \", client_id);\r\n+  // Output the clientId and companyName to the console\r\n+  console.log(\"Client ID: \", clientId);\r\n+  console.log(\"Company Name: \", companyName);\r\n \r\n   try {\r\n     // Authenticate the user with Firebase\r\n     const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n     const user = userCredential.user;\r\n \r\n-    // Store the client_id for the session (use localStorage, React context, etc.)\r\n-    localStorage.setItem('client_id', client_id);\r\n+    // Store the client_id and company_name for the session\r\n+    localStorage.setItem('client_id', clientId);\r\n+    localStorage.setItem('company_name', companyName); // Store companyName in localStorage\r\n \r\n     // Return user data (or redirect, or whatever you need)\r\n     return user;\r\n   } catch (error) {\r\n"
                },
                {
                    "date": 1737040623518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,13 +18,13 @@\n \r\n // Domain-to-client_id mapping\r\n const domainClientMapping = {\r\n   'transinergi.com': {\r\n-    clientId: 'client-id-transinergi',\r\n+    clientId: 'client-id-transinergi116',\r\n     companyName: 'Trans Sinergi'\r\n   },\r\n   'datum.com': {\r\n-    clientId: 'client-id-datum',\r\n+    clientId: 'client-id-datum116',\r\n     companyName: 'DatumCorp'\r\n   }\r\n };\r\n \r\n"
                },
                {
                    "date": 1737045846961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,12 +38,8 @@\n   }\r\n \r\n   const { clientId, companyName } = domainClientMapping[domain]; // Get clientId and companyName based on the domain\r\n \r\n-  // Output the clientId and companyName to the console\r\n-  console.log(\"Client ID: \", clientId);\r\n-  console.log(\"Company Name: \", companyName);\r\n-\r\n   try {\r\n     // Authenticate the user with Firebase\r\n     const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n     const user = userCredential.user;\r\n"
                },
                {
                    "date": 1737048036894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,10 +47,20 @@\n     // Store the client_id and company_name for the session\r\n     localStorage.setItem('client_id', clientId);\r\n     localStorage.setItem('company_name', companyName); // Store companyName in localStorage\r\n \r\n-    // Return user data (or redirect, or whatever you need)\r\n+    // Redirect to dashboard after successful login\r\n+    window.location.href = '/dashboard'; // Example: Redirect to dashboard\r\n+\r\n+    // Return user data\r\n     return user;\r\n   } catch (error) {\r\n-    throw new Error('Login failed: ' + error.message);\r\n+    // Improved error handling\r\n+    if (error.code === 'auth/user-not-found') {\r\n+      throw new Error('User not found. Please check your email or sign up.');\r\n+    } else if (error.code === 'auth/wrong-password') {\r\n+      throw new Error('Incorrect password. Please try again.');\r\n+    } else {\r\n+      throw new Error('Login failed: ' + error.message);\r\n+    }\r\n   }\r\n };\r\n"
                },
                {
                    "date": 1737048756341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,17 +38,28 @@\n   }\r\n \r\n   const { clientId, companyName } = domainClientMapping[domain]; // Get clientId and companyName based on the domain\r\n \r\n+  // Debugging outputs\r\n+  console.log('clientId:', clientId);\r\n+  console.log('companyName:', companyName);\r\n+\r\n   try {\r\n     // Authenticate the user with Firebase\r\n     const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n     const user = userCredential.user;\r\n \r\n+    // Debugging output for successful authentication\r\n+    console.log('User authenticated:', user);\r\n+\r\n     // Store the client_id and company_name for the session\r\n     localStorage.setItem('client_id', clientId);\r\n     localStorage.setItem('company_name', companyName); // Store companyName in localStorage\r\n \r\n+    // Debugging output after storing in localStorage\r\n+    console.log('Stored client_id:', localStorage.getItem('client_id'));\r\n+    console.log('Stored company_name:', localStorage.getItem('company_name'));\r\n+\r\n     // Redirect to dashboard after successful login\r\n     window.location.href = '/dashboard'; // Example: Redirect to dashboard\r\n \r\n     // Return user data\r\n"
                }
            ],
            "date": 1736966845685,
            "name": "Commit-0",
            "content": "// auth.js\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendEmailVerification } from \"firebase/auth\";\r\n\r\n// Allowed email domains\r\nconst allowedDomains = ['sinergi.com', 'datum.com'];\r\n\r\nconst isValidDomain = (email) => {\r\n  const domain = email.split('@')[1];\r\n  return allowedDomains.includes(domain);\r\n};\r\n\r\nexport const handleLogin = async (email, password) => {\r\n  if (!isValidDomain(email)) {\r\n    alert('This email domain is not allowed.');\r\n    return;\r\n  }\r\n\r\n  const auth = getAuth();\r\n  try {\r\n    await signInWithEmailAndPassword(auth, email, password);\r\n  } catch (error) {\r\n    console.error('Login Error:', error.message);\r\n  }\r\n};\r\n\r\nexport const handleSignUp = async (email, password) => {\r\n  if (!isValidDomain(email)) {\r\n    alert('This email domain is not allowed.');\r\n    return;\r\n  }\r\n\r\n  const auth = getAuth();\r\n  try {\r\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n    await sendEmailVerification(userCredential.user);\r\n    console.log('Verification email sent!');\r\n  } catch (error) {\r\n    console.error('Sign-Up Error:', error.message);\r\n  }\r\n};"
        }
    ]
}