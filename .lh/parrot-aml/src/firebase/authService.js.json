{
    "sourceFile": "parrot-aml/src/firebase/authService.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1737041370443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1737045593747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,11 +17,14 @@\n     if (userDoc.exists()) {\r\n       const userData = userDoc.data();\r\n       console.log('User data:', userData);\r\n \r\n-      // You can now access user data like userData.client_id, userData.company_name, etc.\r\n-      // Store user data in your app state or context\r\n-      return userData; // Return the user data for use in the component\r\n+      // Store user data in localStorage for easy access later\r\n+      localStorage.setItem('userName', userData.userName || 'SIGMA'); // Store userName (default 'SIGMA')\r\n+      localStorage.setItem('companyName', userData.companyName || 'Unknown Company'); // Store companyName (default 'Unknown Company')\r\n+\r\n+      // Return user data for use in the component\r\n+      return userData;\r\n     } else {\r\n       console.log('No user data found');\r\n     }\r\n   } catch (error) {\r\n"
                },
                {
                    "date": 1737047597714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,15 +15,18 @@\n     const userDoc = await getDoc(userDocRef);\r\n \r\n     if (userDoc.exists()) {\r\n       const userData = userDoc.data();\r\n-      console.log('User data:', userData);\r\n+      console.log('Fetched user data:', userData);\r\n \r\n-      // Store user data in localStorage for easy access later\r\n-      localStorage.setItem('userName', userData.userName || 'SIGMA'); // Store userName (default 'SIGMA')\r\n-      localStorage.setItem('companyName', userData.companyName || 'Unknown Company'); // Store companyName (default 'Unknown Company')\r\n+      // Ensure user data exists and set them in localStorage\r\n+      if (userData.userName && userData.companyName) {\r\n+        localStorage.setItem('userName', userData.userName);\r\n+        localStorage.setItem('companyName', userData.companyName);\r\n+      } else {\r\n+        console.log(\"User data is missing some fields.\");\r\n+      }\r\n \r\n-      // Return user data for use in the component\r\n       return userData;\r\n     } else {\r\n       console.log('No user data found');\r\n     }\r\n"
                }
            ],
            "date": 1737041370443,
            "name": "Commit-0",
            "content": "// src/authService.js\r\nimport { signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { doc, getDoc } from 'firebase/firestore';\r\nimport { auth, firestore } from './firebase';  // Import Firebase services\r\n\r\n// Login function to authenticate user\r\nexport const loginUser = async (email, password) => {\r\n  try {\r\n    // Sign in with Firebase Authentication\r\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n    const user = userCredential.user;\r\n\r\n    // Fetch the user data from Firestore using UID\r\n    const userDocRef = doc(firestore, 'users', user.uid);  // Use UID as document ID\r\n    const userDoc = await getDoc(userDocRef);\r\n\r\n    if (userDoc.exists()) {\r\n      const userData = userDoc.data();\r\n      console.log('User data:', userData);\r\n\r\n      // You can now access user data like userData.client_id, userData.company_name, etc.\r\n      // Store user data in your app state or context\r\n      return userData; // Return the user data for use in the component\r\n    } else {\r\n      console.log('No user data found');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error logging in:', error.message);\r\n    throw new Error('Login failed');\r\n  }\r\n};\r\n"
        }
    ]
}